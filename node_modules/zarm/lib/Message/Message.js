'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _Icon = require('../Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Message = function (_PureComponent) {
  _inherits(Message, _PureComponent);

  function Message(props) {
    _classCallCheck(this, Message);

    var _this = _possibleConstructorReturn(this, (Message.__proto__ || Object.getPrototypeOf(Message)).call(this, props));

    _this.state = {
      visible: true
    };
    return _this;
  }

  _createClass(Message, [{
    key: 'render',
    value: function render() {
      var _classnames,
          _this2 = this;

      var _props = this.props,
          prefixCls = _props.prefixCls,
          className = _props.className,
          theme = _props.theme,
          size = _props.size,
          icon = _props.icon,
          hasArrow = _props.hasArrow,
          hasClosable = _props.hasClosable,
          onClick = _props.onClick,
          children = _props.children;


      var classes = (0, _classnames3.default)('' + prefixCls, className, (_classnames = {}, _defineProperty(_classnames, 'theme-' + theme, !!theme), _defineProperty(_classnames, 'size-' + size, !!size), _classnames));

      var iconRender = icon && _react2.default.createElement(
        'div',
        { className: prefixCls + '-icon' },
        icon
      );
      var renderCloseIcon = hasClosable && _react2.default.createElement(_Icon2.default, { type: 'wrong', onClick: function onClick() {
          _this2.setState({ visible: false });
        } });
      var renderArrow = hasArrow && _react2.default.createElement(_Icon2.default, { type: 'arrow-right' });
      var noFooter = !hasClosable && !hasArrow;

      return this.state.visible && _react2.default.createElement(
        'div',
        { className: classes, onClick: renderArrow && onClick },
        _react2.default.createElement(
          'div',
          { className: prefixCls + '-header' },
          iconRender
        ),
        _react2.default.createElement(
          'div',
          { className: prefixCls + '-body' },
          children
        ),
        !noFooter && _react2.default.createElement(
          'div',
          { className: prefixCls + '-footer' },
          renderArrow,
          renderCloseIcon
        )
      );
    }
  }]);

  return Message;
}(_react.PureComponent);

Message.propTypes = {
  prefixCls: _propTypes2.default.string,
  className: _propTypes2.default.string,
  theme: _propTypes2.default.oneOf(['default', 'primary', 'info', 'success', 'warning', 'error']),
  size: _propTypes2.default.oneOf(['lg']),
  icon: _propTypes2.default.element,
  hasArrow: _propTypes2.default.bool,
  hasClosable: _propTypes2.default.bool,
  onClick: _propTypes2.default.func
};

Message.defaultProps = {
  prefixCls: 'za-message',
  theme: 'primary',
  hasArrow: false,
  hasClosable: false
};

exports.default = Message;