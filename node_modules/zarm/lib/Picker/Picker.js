'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = require('classnames');

var _classnames4 = _interopRequireDefault(_classnames3);

var _utils = require('./utils');

var _ColumnGroup = require('./ColumnGroup');

var _ColumnGroup2 = _interopRequireDefault(_ColumnGroup);

var _Cascader = require('./Cascader');

var _Cascader2 = _interopRequireDefault(_Cascader);

var _Popup = require('../Popup');

var _Popup2 = _interopRequireDefault(_Popup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// 阻止选择器区域的默认事件
function onContainerClick(e) {
  e.stopPropagation();
}

var Picker = function (_Component) {
  _inherits(Picker, _Component);

  function Picker(props) {
    _classCallCheck(this, Picker);

    var _this = _possibleConstructorReturn(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).call(this, props));

    var initValue = props.value || props.defaultValue || [];
    var dataSource = props.dataSource;

    var _data = null;
    var _value = null;

    // 针对单列数据源，转换为[[{}]]
    if (dataSource.length && !(0, _utils.isArray)(dataSource[0]) && !(0, _utils.hasChildrenObject)(dataSource[0])) {
      _data = [props.dataSource];
      _value = (0, _utils.isArray)(initValue) ? initValue : [initValue];
    } else {
      _data = dataSource;
      _value = initValue;
    }

    _this.state = {
      visible: props.visible || false,
      value: _value,
      data: _data,
      cascade: dataSource.length && !(0, _utils.isArray)(dataSource[0]) && (0, _utils.hasChildrenObject)(dataSource[0])
    };

    _this.tempValue = _value;
    return _this;
  }

  _createClass(Picker, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if ('dataSource' in nextProps && nextProps.dataSource !== this.props.dataSource) {
        var dataSource = nextProps.dataSource;

        var _data = null;

        if (dataSource.length && !(0, _utils.isArray)(dataSource[0]) && !(0, _utils.hasChildrenObject)(dataSource[0])) {
          _data = [nextProps.dataSource];
        } else {
          _data = nextProps.dataSource;
        }

        this.setState({
          data: _data,
          cascade: dataSource.length && !(0, _utils.isArray)(dataSource[0]) && (0, _utils.hasChildrenObject)(dataSource[0])
        });
      }

      if ('value' in nextProps && nextProps.value !== this.props.value) {
        var _value = null;
        var _dataSource = nextProps.dataSource;


        if (_dataSource.length && !(0, _utils.isArray)(_dataSource[0]) && !(0, _utils.hasChildrenObject)(_dataSource[0])) {
          _value = (0, _utils.isArray)(nextProps.value) ? nextProps.value : [nextProps.value];
        } else {
          _value = nextProps.value;
        }

        this.setState({
          value: _value,
          cascade: _dataSource.length && !(0, _utils.isArray)(_dataSource[0]) && (0, _utils.hasChildrenObject)(_dataSource[0])
        });
        this.tempValue = _value;
      }
    }
  }, {
    key: 'onValueChange',
    value: function onValueChange(value) {
      this.setState({
        value: value
      });
      this.props.onChange(value);
    }
  }, {
    key: 'onCancel',
    value: function onCancel() {
      var onCancel = this.props.onCancel;

      this.toggle();
      this.setState({
        value: this.tempValue
      });
      onCancel && onCancel();
    }
  }, {
    key: 'onOk',
    value: function onOk() {
      var _props = this.props,
          onOk = _props.onOk,
          valueMember = _props.valueMember,
          cols = _props.cols;
      var _state = this.state,
          data = _state.data,
          cascade = _state.cascade;

      var value = this.getInitValue();
      this.setState({
        value: value
      });
      this.tempValue = value;
      this.toggle();
      var _value = null;
      _value = (0, _utils.formatBackToObject)(data, value, cascade, valueMember, cols);
      onOk && onOk(_value);
    }
  }, {
    key: 'onMaskClick',
    value: function onMaskClick() {
      var onMaskClick = this.props.onMaskClick;

      this.onCancel();
      onMaskClick && onMaskClick();
    }
  }, {
    key: 'getInitValue',
    value: function getInitValue() {
      var data = this.state.data;
      var valueMember = this.props.valueMember;
      var value = this.state.value;


      if (!value || !value.length) {
        if (this.state.cascade) {
          return (0, _utils.formatToInit)(data[0], valueMember, this.props.cols);
        }
        return data.map(function (d) {
          return d[0][valueMember];
        });
      }

      return value;
    }

    // 切换显示状态

  }, {
    key: 'toggle',
    value: function toggle() {
      if (this.props.disabled) {
        return;
      }
      this.setState({
        visible: !this.state.visible
      });
    }
  }, {
    key: 'handleClick',
    value: function handleClick() {
      this.props.onClick();
      !this.props.disabled && this.toggle();
    }
  }, {
    key: 'close',
    value: function close(key) {
      this.setState(_defineProperty({}, '' + key, false));
    }
  }, {
    key: '_displayRender',
    value: function _displayRender(data) {
      var _props2 = this.props,
          displayRender = _props2.displayRender,
          displayMember = _props2.displayMember,
          displayAddon = _props2.displayAddon;


      if (typeof displayRender === 'function') {
        return displayRender(data);
      }
      return data.map(function (v) {
        return v[displayMember];
      }).join(displayAddon);
    }
  }, {
    key: 'render',
    value: function render() {
      var _classnames,
          _classnames2,
          _this2 = this;

      var _props3 = this.props,
          prefixCls = _props3.prefixCls,
          disabled = _props3.disabled,
          className = _props3.className,
          cancelText = _props3.cancelText,
          okText = _props3.okText,
          title = _props3.title,
          placeholder = _props3.placeholder,
          valueMember = _props3.valueMember,
          displayMember = _props3.displayMember,
          displayAddon = _props3.displayAddon;
      var _state2 = this.state,
          data = _state2.data,
          value = _state2.value;


      var PickerCol = null;

      var classes = (0, _classnames4.default)((_classnames = {}, _defineProperty(_classnames, prefixCls + '-container', true), _defineProperty(_classnames, className, !!className), _classnames));

      var inputCls = (0, _classnames4.default)((_classnames2 = {}, _defineProperty(_classnames2, prefixCls + '-input', true), _defineProperty(_classnames2, prefixCls + '-placeholder', !value.join(displayAddon)), _defineProperty(_classnames2, prefixCls + '-disabled', !!disabled), _classnames2));

      var cols = data.map(function (d) {
        return { props: { children: d } };
      });

      if (this.state.cascade) {
        PickerCol = _react2.default.createElement(_Cascader2.default, {
          prefixCls: prefixCls,
          data: data,
          value: this.state.value,
          cols: this.props.cols,
          displayMember: displayMember,
          valueMember: valueMember,
          onChange: function onChange(v) {
            return _this2.onValueChange(v);
          }
        });
      } else {
        PickerCol = _react2.default.createElement(
          _ColumnGroup2.default,
          {
            className: className,
            prefixCls: prefixCls,
            displayMember: displayMember,
            valueMember: valueMember,
            selectedValue: value,
            onValueChange: function onValueChange(v) {
              return _this2.onValueChange(v);
            } },
          cols
        );
      }

      var display = function display() {
        if (_this2.state.cascade) {
          if (value.length) {
            var treeChildren = (0, _utils.arrayTreeFilter)(_this2.props.dataSource, function (item, level) {
              return item[valueMember] === value[level];
            });

            return _this2._displayRender(treeChildren);
          }
        }

        var treeChildren2 = data.map(function (d, index) {
          if (value[index]) {
            return d.filter(function (obj) {
              return value[index] === obj[valueMember];
            })[0];
          }
          return undefined;
        }).filter(function (t) {
          return !!t;
        });
        return _this2._displayRender(treeChildren2);
      };

      return _react2.default.createElement(
        'div',
        { className: '' + prefixCls, onClick: function onClick() {
            return _this2.handleClick();
          } },
        _react2.default.createElement(
          'div',
          { className: inputCls },
          _react2.default.createElement('input', { type: 'hidden', value: this.state.value }),
          display() || placeholder
        ),
        _react2.default.createElement(
          'div',
          { className: classes, onClick: function onClick(e) {
              return onContainerClick(e);
            } },
          _react2.default.createElement(
            _Popup2.default,
            {
              className: 'za-popup-inner',
              visible: this.state.visible,
              onMaskClick: function onMaskClick() {
                return _this2.onMaskClick();
              } },
            _react2.default.createElement(
              'div',
              { className: prefixCls + '-wrapper' },
              _react2.default.createElement(
                'div',
                { className: prefixCls + '-header' },
                _react2.default.createElement(
                  'div',
                  { className: prefixCls + '-cancel', onClick: function onClick() {
                      return _this2.onCancel();
                    } },
                  cancelText
                ),
                _react2.default.createElement(
                  'div',
                  { className: prefixCls + '-title' },
                  title
                ),
                _react2.default.createElement(
                  'div',
                  { className: prefixCls + '-submit', onClick: function onClick() {
                      return _this2.onOk();
                    } },
                  okText
                )
              ),
              _react2.default.createElement(
                'div',
                { className: prefixCls + '-mask-top' },
                _react2.default.createElement(
                  'div',
                  { className: prefixCls + '-mask-bottom' },
                  PickerCol
                )
              )
            )
          )
        )
      );
    }
  }]);

  return Picker;
}(_react.Component);

Picker.propTypes = {
  visible: _propTypes2.default.bool,
  placeholder: _propTypes2.default.string,
  title: _propTypes2.default.string,
  cancelText: _propTypes2.default.string,
  okText: _propTypes2.default.string,
  displayAddon: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  dataSource: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array])).isRequired,
  cols: _propTypes2.default.number,
  onOk: _propTypes2.default.func.isRequired,
  onCancel: _propTypes2.default.func,
  onMaskClick: _propTypes2.default.func,
  displayRender: _propTypes2.default.func,
  prefixCls: _propTypes2.default.string,
  displayMember: _propTypes2.default.string,
  valueMember: _propTypes2.default.string
};

Picker.defaultProps = {
  visible: false,
  placeholder: '请选择',
  title: '请选择',
  cancelText: '取消',
  okText: '确定',
  displayAddon: '',
  disabled: false,
  dataSource: [],
  onClick: function onClick() {},
  onChange: function onChange() {},
  onOk: function onOk() {},
  onCancel: function onCancel() {},
  onMaskClick: function onMaskClick() {},
  prefixCls: 'za-picker',
  displayMember: 'label',
  valueMember: 'value'
};

exports.default = Picker;