'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames5 = require('classnames');

var _classnames6 = _interopRequireDefault(_classnames5);

var _Popup = require('../Popup');

var _Popup2 = _interopRequireDefault(_Popup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var stopEventPropagation = function stopEventPropagation(e) {
  e.stopPropagation();
  e.nativeEvent.stopImmediatePropagation();
};

var PickerStack = function (_Component) {
  _inherits(PickerStack, _Component);

  function PickerStack(props) {
    _classCallCheck(this, PickerStack);

    var _this = _possibleConstructorReturn(this, (PickerStack.__proto__ || Object.getPrototypeOf(PickerStack)).call(this, props));

    _this.columns = {};
    _this.state = _extends({
      visible: false
    }, _this.resolveProps(props, props.value));
    _this.onMaskClick = _this.onMaskClick.bind(_this);
    _this.onCancel = _this.onCancel.bind(_this);
    return _this;
  }

  _createClass(PickerStack, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.reposition();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState(this.resolveProps(nextProps));
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.reposition();
    }
  }, {
    key: 'onMaskClick',
    value: function onMaskClick() {
      var onMaskClick = this.props.onMaskClick;

      this.close(true);
      onMaskClick && onMaskClick();
    }
  }, {
    key: 'onCancel',
    value: function onCancel() {
      var onCancel = this.props.onCancel;

      this.close(true);
      onCancel && onCancel();
    }
  }, {
    key: 'resolveProps',
    value: function resolveProps(_ref) {
      var _this2 = this;

      var value = _ref.value,
          dataSource = _ref.dataSource,
          validate = _ref.validate;

      var resolveValue = [];

      value.reduce(function (list, item) {
        var valueItem = _this2.obtainItem(list, item);

        if (valueItem) {
          resolveValue.push(valueItem);

          return valueItem.children || [];
        }

        return [];
      }, dataSource);

      return {
        value: resolveValue,
        displayValue: [].concat(resolveValue),
        errorMsg: validate(value)
      };
    }
  }, {
    key: 'obtainItem',
    value: function obtainItem(list, value) {
      var valueMember = this.props.valueMember;

      return list.filter(function (item) {
        return item[valueMember] === value;
      })[0];
    }
  }, {
    key: 'change',
    value: function change(index, cVal, isLast) {
      var _props = this.props,
          validate = _props.validate,
          onOk = _props.onOk;

      var value = this.state.value.slice(0, index);
      var errorMsg = null;

      cVal && (value[index] = cVal);
      errorMsg = validate(value);

      if (isLast && !errorMsg) {
        this.setState({
          value: value,
          displayValue: [].concat(_toConsumableArray(value)),
          errorMsg: errorMsg
        });
        this.close();
        onOk(value);
      } else {
        this.setState({ value: value, errorMsg: errorMsg });
      }
    }
  }, {
    key: 'show',
    value: function show() {
      this.setState({ visible: true });
    }
  }, {
    key: 'close',
    value: function close(isCancel) {
      this.setState({ visible: false });
      if (isCancel) {
        this.setState({
          value: [].concat(_toConsumableArray(this.state.displayValue))
        });
      }
    }
  }, {
    key: 'reposition',
    value: function reposition() {
      var _this3 = this;

      var _props2 = this.props,
          dataSource = _props2.dataSource,
          valueMember = _props2.valueMember,
          disabled = _props2.disabled,
          displayItems = _props2.displayItems,
          itemHeight = _props2.itemHeight,
          cols = _props2.cols;


      if (disabled) return;

      this.state.value.reduce(function (data, item, index) {
        var value = item[valueMember];
        var valIndex = data.map(function (dataItem) {
          return dataItem[valueMember];
        }).indexOf(value);

        if (index < cols && ~valIndex) {
          var target = _this3.columns['column' + index];
          var position = target.scrollTop;
          var viewTopIndex = valIndex - displayItems;

          if (position < (viewTopIndex + 1) * itemHeight || position > valIndex * itemHeight) {
            target.scrollTop = valIndex * itemHeight;
          }

          return data[valIndex].children || [];
        }

        return [];
      }, dataSource);
    }
  }, {
    key: 'renderGroup',
    value: function renderGroup(dataSource, value) {
      var _props3 = this.props,
          valueMember = _props3.valueMember,
          cols = _props3.cols;

      var group = [];
      var i = 0;

      while (dataSource) {
        var colVal = value[i];
        var childrenData = ((colVal ? this.obtainItem(dataSource, colVal[valueMember]) : dataSource[0]) || {}).children;

        if (childrenData && childrenData.length && i < cols - 1) {
          group.push(this.renderColumn(dataSource, i, colVal || _defineProperty({}, valueMember, '')));
          dataSource = childrenData;
        } else {
          group.push(this.renderColumn(dataSource, i, colVal || _defineProperty({}, valueMember, ''), true));
          dataSource = null;
        }

        i += 1;
      }

      return group;
    }
  }, {
    key: 'renderColumn',
    value: function renderColumn(list, colIndex, data, isLast) {
      var _classnames,
          _this4 = this;

      var _props4 = this.props,
          valueMember = _props4.valueMember,
          prefixCls = _props4.prefixCls,
          itemRender = _props4.itemRender;

      var pickVal = data[valueMember];
      var cls = (0, _classnames6.default)((_classnames = {}, _defineProperty(_classnames, prefixCls + '-stack-column', true), _defineProperty(_classnames, 'lower-hidden', !pickVal), _classnames));

      return _react2.default.createElement(
        'div',
        {
          key: colIndex,
          className: cls,
          onClick: function onClick() {
            return _this4.change(colIndex - 1);
          } },
        _react2.default.createElement(
          'div',
          {
            className: prefixCls + '-stack-column-wrapper',
            ref: function ref(_ref4) {
              _this4.columns['column' + colIndex] = _ref4;
            },
            onClick: stopEventPropagation },
          list.map(function (item, index) {
            var _classnames2;

            return _react2.default.createElement(
              'div',
              {
                key: +index,
                className: (0, _classnames6.default)((_classnames2 = {}, _defineProperty(_classnames2, prefixCls + '-stack-item', true), _defineProperty(_classnames2, 'active', item[valueMember] === pickVal), _classnames2)),
                onClick: function onClick() {
                  return _this4.change(colIndex, item, isLast);
                } },
              itemRender(item)
            );
          })
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _classnames3,
          _classnames4,
          _this5 = this;

      var _props5 = this.props,
          className = _props5.className,
          curVal = _props5.value,
          title = _props5.title,
          dataSource = _props5.dataSource,
          placeholder = _props5.placeholder,
          disabled = _props5.disabled,
          labelAddon = _props5.labelAddon,
          prefixCls = _props5.prefixCls,
          displayRender = _props5.displayRender,
          itemRender = _props5.itemRender;
      var _state = this.state,
          visible = _state.visible,
          errorMsg = _state.errorMsg,
          value = _state.value,
          displayValue = _state.displayValue;

      var displayLabel = displayRender(displayValue);

      var labelCls = (0, _classnames6.default)((_classnames3 = {}, _defineProperty(_classnames3, prefixCls + '-input', true), _defineProperty(_classnames3, prefixCls + '-placeholder', !displayLabel), _defineProperty(_classnames3, prefixCls + '-disabled', disabled), _classnames3));
      var wrapperCls = (0, _classnames6.default)((_classnames4 = {}, _defineProperty(_classnames4, prefixCls + '-container', true), _defineProperty(_classnames4, prefixCls + '-hidden', !visible), _defineProperty(_classnames4, className, !!className), _classnames4));

      return _react2.default.createElement(
        'div',
        { className: prefixCls },
        _react2.default.createElement(
          'div',
          { className: labelCls, onClick: function onClick() {
              return !disabled && _this5.show();
            } },
          _react2.default.createElement('input', { type: 'hidden', value: curVal }),
          displayLabel || placeholder
        ),
        disabled ? null : _react2.default.createElement(
          'div',
          { className: wrapperCls, onClick: stopEventPropagation },
          _react2.default.createElement(
            _Popup2.default,
            {
              visible: visible,
              onMaskClick: this.onMaskClick },
            _react2.default.createElement(
              'div',
              { className: prefixCls + '-wrapper' },
              _react2.default.createElement(
                'div',
                { className: prefixCls + '-header' },
                _react2.default.createElement(
                  'div',
                  { className: prefixCls + '-cancel', onClick: this.onCancel },
                  '\u53D6\u6D88'
                ),
                _react2.default.createElement(
                  'div',
                  { className: prefixCls + '-title' },
                  title
                ),
                _react2.default.createElement('div', { className: prefixCls + '-submit' })
              ),
              _react2.default.createElement(
                'div',
                { className: prefixCls + '-crumbs' },
                _react2.default.createElement(
                  'p',
                  null,
                  '\u9009\u62E9\uFF1A',
                  value.map(function (item) {
                    return itemRender(item);
                  }).join(labelAddon)
                ),
                errorMsg ? _react2.default.createElement(
                  'p',
                  { className: prefixCls + '-crumbs-error' },
                  errorMsg
                ) : null
              ),
              _react2.default.createElement(
                'div',
                { className: prefixCls + '-stack-group' },
                this.renderGroup(dataSource, value)
              )
            )
          )
        )
      );
    }
  }]);

  return PickerStack;
}(_react.Component);

PickerStack.propTypes = {
  prefixCls: _propTypes2.default.string,
  value: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.arrayOf(_propTypes2.default.number)]),
  valueMember: _propTypes2.default.string,
  title: _propTypes2.default.string,
  placeholder: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  cols: _propTypes2.default.number,
  labelAddon: _propTypes2.default.string,
  displayItems: _propTypes2.default.number,
  itemHeight: _propTypes2.default.number,
  onOk: _propTypes2.default.func,
  onCancel: _propTypes2.default.func,
  displayRender: _propTypes2.default.func,
  itemRender: _propTypes2.default.func,
  validate: _propTypes2.default.func
};

PickerStack.defaultProps = {
  prefixCls: 'za-picker',
  value: [],
  valueMember: 'value',
  title: '请选择',
  placeholder: '请选择',
  disabled: false,
  dataSource: [],
  cols: Infinity,
  labelAddon: ' > ',
  displayItems: 8,
  itemHeight: 50,
  onOk: function onOk() {},
  onCancel: function onCancel() {},

  displayRender: function displayRender(data) {
    return data.map(function (_ref5) {
      var label = _ref5.label;
      return label;
    }).join('');
  },
  itemRender: function itemRender(data) {
    return data.label;
  },
  validate: function validate() {}
};

exports.default = PickerStack;