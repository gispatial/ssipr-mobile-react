'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Column = require('./Column');

var _Column2 = _interopRequireDefault(_Column);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColumnGroup = function (_Component) {
  _inherits(ColumnGroup, _Component);

  function ColumnGroup(props) {
    _classCallCheck(this, ColumnGroup);

    var _this = _possibleConstructorReturn(this, (ColumnGroup.__proto__ || Object.getPrototypeOf(ColumnGroup)).call(this, props));

    _this.state = {
      visible: props.visible || false
    };
    return _this;
  }

  _createClass(ColumnGroup, [{
    key: 'onValueChange',
    value: function onValueChange(v, i) {
      var value = this.getValue().concat();

      value[i] = v;
      this.props.onValueChange(value, i);
    }
  }, {
    key: 'getValue',
    value: function getValue() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          selectedValue = _props.selectedValue;


      if (selectedValue && selectedValue.length) {
        return selectedValue;
      }
      if (!children) {
        return [];
      }
      return children.map(function (c) {
        var cc = c.props.children;
        return cc && cc[0] && cc[0][_this2.props.valueMember];
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props2 = this.props,
          prefixCls = _props2.prefixCls,
          className = _props2.className,
          indicatorStyle = _props2.indicatorStyle,
          pure = _props2.pure,
          children = _props2.children,
          displayMember = _props2.displayMember,
          valueMember = _props2.valueMember;


      var selectedValue = this.getValue();
      var colElements = children.map(function (col, i) {
        return _react2.default.createElement(
          'div',
          { key: col.key || i, className: prefixCls + '-column-group-item' },
          _react2.default.createElement(_Column2.default, _extends({
            pure: pure,
            indicatorStyle: indicatorStyle,
            prefixCls: prefixCls,
            selectedValue: selectedValue[i],
            displayMember: displayMember,
            valueMember: valueMember,
            onValueChange: function onValueChange(value) {
              return _this3.onValueChange(value, i);
            }
          }, col.props))
        );
      });

      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)(className, prefixCls + '-column-group') },
        colElements
      );
    }
  }]);

  return ColumnGroup;
}(_react.Component);

ColumnGroup.propTypes = {
  prefixCls: _propTypes2.default.string,
  onValueChange: _propTypes2.default.func
};

ColumnGroup.defaultProps = {
  prefixCls: 'za-picker',
  onValueChange: function onValueChange() {}
};

exports.default = ColumnGroup;