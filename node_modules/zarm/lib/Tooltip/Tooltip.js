'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tooltip = function (_PureComponent) {
  _inherits(Tooltip, _PureComponent);

  function Tooltip(props) {
    _classCallCheck(this, Tooltip);

    var _this = _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call(this, props));

    _initialiseProps.call(_this);

    _this.rootDom = document.createElement('div');
    return _this;
  }

  _createClass(Tooltip, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.show(this.props);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.show(nextProps);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var children = this.props.children;


      return (0, _react.cloneElement)(children, {
        ref: function ref(ele) {
          _this2.child = ele;
        }
      });
    }
  }]);

  return Tooltip;
}(_react.PureComponent);

var _initialiseProps = function _initialiseProps() {
  var _this3 = this;

  this.show = function (props) {
    var _classnames;

    var prefixCls = props.prefixCls,
        className = props.className,
        visible = props.visible,
        message = props.message;


    var root = _this3.rootDom;
    if (visible) {
      document.body.appendChild(_this3.rootDom);
    }

    var cls = (0, _classnames3.default)((_classnames = {}, _defineProperty(_classnames, '' + prefixCls, true), _defineProperty(_classnames, prefixCls + '-hidden', !visible), _defineProperty(_classnames, className, !!className), _classnames));

    // eslint-disable-next-line
    var rect = (0, _reactDom.findDOMNode)(_this3.child).getBoundingClientRect();
    var scrollTop = document.documentElement.scrollTop + document.body.scrollTop;
    var style = {
      left: rect.left,
      top: rect.top + scrollTop,
      width: rect.width
    };

    _reactDom2.default.render(_react2.default.createElement(
      'div',
      { className: cls, style: style, ref: function ref(ele) {
          _this3.tooltip = ele;
        } },
      _react2.default.createElement(
        'div',
        { className: prefixCls + '-inner' },
        message
      )
    ), root);
  };
};

Tooltip.propTypes = {
  prefixCls: _propTypes2.default.string, // eslint-disable-line
  className: _propTypes2.default.string, // eslint-disable-line
  message: _propTypes2.default.any // eslint-disable-line
};

Tooltip.defaultProps = {
  prefixCls: 'za-tooltip'
};

exports.default = Tooltip;