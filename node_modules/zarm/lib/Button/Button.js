'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _Spinner = require('../Spinner');

var _Spinner2 = _interopRequireDefault(_Spinner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Button = function (_PureComponent) {
  _inherits(Button, _PureComponent);

  function Button() {
    _classCallCheck(this, Button);

    return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  _createClass(Button, [{
    key: 'render',
    value: function render() {
      var _classnames;

      var _props = this.props,
          prefixCls = _props.prefixCls,
          className = _props.className,
          theme = _props.theme,
          size = _props.size,
          shape = _props.shape,
          icon = _props.icon,
          block = _props.block,
          active = _props.active,
          focus = _props.focus,
          bordered = _props.bordered,
          disabled = _props.disabled,
          loading = _props.loading,
          tabIndex = _props.tabIndex,
          _onClick = _props.onClick,
          children = _props.children,
          others = _objectWithoutProperties(_props, ['prefixCls', 'className', 'theme', 'size', 'shape', 'icon', 'block', 'active', 'focus', 'bordered', 'disabled', 'loading', 'tabIndex', 'onClick', 'children']);

      var classes = (0, _classnames3.default)('' + prefixCls, className, (_classnames = {}, _defineProperty(_classnames, 'theme-' + theme, !!theme), _defineProperty(_classnames, 'size-' + size, !!size), _defineProperty(_classnames, 'shape-' + shape, !!shape), _defineProperty(_classnames, 'block', block), _defineProperty(_classnames, 'bordered', bordered), _defineProperty(_classnames, 'active', active), _defineProperty(_classnames, 'focus', focus), _defineProperty(_classnames, 'disabled', disabled), _classnames));

      var iconRender = loading ? _react2.default.createElement(_Spinner2.default, { className: 'rotate360' }) : icon;

      var childrenRender = children && _react2.default.createElement(
        'span',
        null,
        children
      );

      var contentRender = !!icon || loading ? _react2.default.createElement(
        'div',
        { className: prefixCls + '-content' },
        iconRender,
        childrenRender
      ) : childrenRender;

      return _react2.default.createElement(
        'a',
        _extends({
          role: 'button',
          tabIndex: tabIndex,
          'aria-disabled': disabled,
          className: classes,
          onClick: function onClick(e) {
            return !disabled && _onClick(e);
          },
          onTouchStart: function onTouchStart() {}
        }, others),
        contentRender
      );
    }
  }]);

  return Button;
}(_react.PureComponent);

Button.propTypes = {
  prefixCls: _propTypes2.default.string,
  className: _propTypes2.default.string,
  theme: _propTypes2.default.oneOf(['default', 'primary', 'info', 'success', 'warning', 'error']),
  size: _propTypes2.default.oneOf(['xl', 'lg', 'sm', 'xs']),
  shape: _propTypes2.default.oneOf(['radius', 'round', 'circle']),
  block: _propTypes2.default.bool,
  bordered: _propTypes2.default.bool,
  active: _propTypes2.default.bool,
  focus: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  loading: _propTypes2.default.bool,
  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  onClick: _propTypes2.default.func
};

Button.defaultProps = {
  prefixCls: 'za-button',
  theme: 'default',
  block: false,
  bordered: false,
  active: false,
  focus: false,
  disabled: false,
  loading: false,
  onClick: function onClick() {}
};

exports.default = Button;