'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = require('classnames');

var _classnames4 = _interopRequireDefault(_classnames3);

var _Popup = require('../Popup');

var _Popup2 = _interopRequireDefault(_Popup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ActionSheet = function (_PureComponent) {
  _inherits(ActionSheet, _PureComponent);

  function ActionSheet() {
    _classCallCheck(this, ActionSheet);

    return _possibleConstructorReturn(this, (ActionSheet.__proto__ || Object.getPrototypeOf(ActionSheet)).apply(this, arguments));
  }

  _createClass(ActionSheet, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          prefixCls = _props.prefixCls,
          className = _props.className,
          shape = _props.shape,
          visible = _props.visible,
          onMaskClick = _props.onMaskClick,
          actions = _props.actions,
          cancelText = _props.cancelText,
          onCancel = _props.onCancel;


      var cls = (0, _classnames4.default)('' + prefixCls, className, _defineProperty({}, 'shape-' + shape, !!shape));

      return _react2.default.createElement(
        _Popup2.default,
        { visible: visible, onMaskClick: onMaskClick },
        _react2.default.createElement(
          'div',
          { className: cls },
          _react2.default.createElement(
            'div',
            { className: prefixCls + '-actions' },
            actions.map(function (action, index) {
              var _classnames2;

              var actionCls = (0, _classnames4.default)((_classnames2 = {}, _defineProperty(_classnames2, prefixCls + '-btn', true), _defineProperty(_classnames2, 'theme-' + action.theme, !!action.theme), _classnames2));
              return _react2.default.createElement(
                'a',
                { key: +index, className: actionCls, onClick: action.onClick },
                action.text
              );
            })
          ),
          typeof onCancel === 'function' ? _react2.default.createElement(
            'div',
            { className: prefixCls + '-cancel' },
            _react2.default.createElement(
              'a',
              { className: prefixCls + '-btn', onClick: onCancel },
              cancelText
            )
          ) : null
        )
      );
    }
  }]);

  return ActionSheet;
}(_react.PureComponent);

ActionSheet.propTypes = {
  prefixCls: _propTypes2.default.string,
  className: _propTypes2.default.string,
  shape: _propTypes2.default.oneOf(['radius']),
  visible: _propTypes2.default.bool,
  actions: _propTypes2.default.arrayOf(_propTypes2.default.object),
  onMaskClick: _Popup2.default.propTypes.onMaskClick,
  onCancel: _propTypes2.default.func,
  cancelText: _propTypes2.default.string
};

ActionSheet.defaultProps = {
  prefixCls: 'za-actionsheet',
  shape: 'radius',
  visible: false,
  actions: [],
  onMaskClick: _Popup2.default.defaultProps.onMaskClick,
  cancelText: '取消'
};

exports.default = ActionSheet;