{"ast":null,"code":"var _jsxFileName = \"/Users/Crocslut/Desktop/STT/MobileAppSSIPR/src/web/components/Recipe/Single.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Card, CardText, CardBody, CardHeader, ListGroup, ListGroupItem } from 'reactstrap';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { errorMessages } from '../../../constants/messages';\nimport Loading from '../UI/Loading';\nimport Error from '../UI/Error';\n\nvar RecipeView = function RecipeView(_ref) {\n  var error = _ref.error,\n      loading = _ref.loading,\n      recipes = _ref.recipes,\n      recipeId = _ref.recipeId;\n  // Loading\n  if (loading) return React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }); // Error\n\n  if (error) return React.createElement(Error, {\n    content: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }); // Get this Recipe from all recipes\n\n  var recipe = null;\n\n  if (recipeId && recipes) {\n    recipe = recipes.find(function (item) {\n      return parseInt(item.id, 10) === parseInt(recipeId, 10);\n    });\n  } // Recipe not found\n\n\n  if (!recipe) return React.createElement(Error, {\n    content: errorMessages.recipe404,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }); // Build Ingredients listing\n\n  var ingredients = recipe.ingredients.map(function (item) {\n    return React.createElement(ListGroupItem, {\n      key: \"\".concat(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, item);\n  }); // Build Method listing\n\n  var method = recipe.method.map(function (item) {\n    return React.createElement(ListGroupItem, {\n      key: \"\".concat(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, item);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, recipe.title)), React.createElement(Row, {\n    className: \"pt-4 pt-sm-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, recipe.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"by\", ' ', recipe.author))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Col, {\n    lg: \"4\",\n    className: \"recipe-view-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"About this recipe\"), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, recipe.body)))), React.createElement(Col, {\n    lg: \"4\",\n    className: \"recipe-view-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Ingredients\"), React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, ingredients))), React.createElement(Col, {\n    lg: \"4\",\n    className: \"recipe-view-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Method\"), React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, method)))), React.createElement(Row, {\n    className: \"pt-5 pb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-secondary\",\n    to: \"/recipes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon-arrow-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), ' ', \"Back\"))));\n};\n\nRecipeView.propTypes = {\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  recipeId: PropTypes.string.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.shape()).isRequired\n};\nRecipeView.defaultProps = {\n  error: null\n};\nexport default RecipeView;","map":{"version":3,"sources":["/Users/Crocslut/Desktop/STT/MobileAppSSIPR/src/web/components/Recipe/Single.js"],"names":["React","PropTypes","Row","Col","Card","CardText","CardBody","CardHeader","ListGroup","ListGroupItem","Helmet","Link","errorMessages","Loading","Error","RecipeView","error","loading","recipes","recipeId","recipe","find","item","parseInt","id","recipe404","ingredients","map","method","title","author","body","propTypes","string","bool","isRequired","arrayOf","shape","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Card,\n  CardText,\n  CardBody,\n  CardHeader,\n  ListGroup,\n  ListGroupItem,\n} from 'reactstrap';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { errorMessages } from '../../../constants/messages';\nimport Loading from '../UI/Loading';\nimport Error from '../UI/Error';\n\nconst RecipeView = ({\n  error, loading, recipes, recipeId,\n}) => {\n  // Loading\n  if (loading) return <Loading />;\n\n  // Error\n  if (error) return <Error content={error} />;\n\n  // Get this Recipe from all recipes\n  let recipe = null;\n  if (recipeId && recipes) {\n    recipe = recipes.find(item => parseInt(item.id, 10) === parseInt(recipeId, 10));\n  }\n\n  // Recipe not found\n  if (!recipe) return <Error content={errorMessages.recipe404} />;\n\n  // Build Ingredients listing\n  const ingredients = recipe.ingredients.map(item => (\n    <ListGroupItem key={`${item}`}>{item}</ListGroupItem>\n  ));\n\n  // Build Method listing\n  const method = recipe.method.map(item => (\n    <ListGroupItem key={`${item}`}>{item}</ListGroupItem>\n  ));\n\n  return (\n    <div>\n      <Helmet>\n        <title>{recipe.title}</title>\n      </Helmet>\n\n      <Row className=\"pt-4 pt-sm-0\">\n        <Col sm=\"12\">\n          <h1>{recipe.title}</h1>\n          <p>\n            by\n            {' '}\n            {recipe.author}\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"4\" className=\"recipe-view-card\">\n          <Card>\n            <CardHeader>About this recipe</CardHeader>\n            <CardBody>\n              <CardText>{recipe.body}</CardText>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg=\"4\" className=\"recipe-view-card\">\n          <Card>\n            <CardHeader>Ingredients</CardHeader>\n            <ListGroup className=\"list-group-flush\">{ingredients}</ListGroup>\n          </Card>\n        </Col>\n        <Col lg=\"4\" className=\"recipe-view-card\">\n          <Card>\n            <CardHeader>Method</CardHeader>\n            <ListGroup className=\"list-group-flush\">{method}</ListGroup>\n          </Card>\n        </Col>\n      </Row>\n      <Row className=\"pt-5 pb-3\">\n        <Col sm=\"12\">\n          <Link className=\"btn btn-secondary\" to=\"/recipes\">\n            <i className=\"icon-arrow-left\" />\n            {' '}\n            Back\n          </Link>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nRecipeView.propTypes = {\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  recipeId: PropTypes.string.isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\n\nRecipeView.defaultProps = {\n  error: null,\n};\n\nexport default RecipeView;\n"]},"metadata":{},"sourceType":"module"}