{"ast":null,"code":"import _objectSpread from \"/Users/Crocslut/Desktop/STT/MobileAppSSIPR/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Firebase, FirebaseRef } from '../lib/firebase';\nimport initState from '../store/recipes';\nexport default {\n  /**\n   *  Initial state\n   */\n  state: {\n    recipesx: initState.recipes,\n    meals: initState.meals\n  },\n\n  /**\n   * Reducers\n   */\n  reducers: {\n    replaceMeals: function replaceMeals(state, payload) {\n      return _objectSpread({}, state, {\n        meals: payload\n      });\n    },\n    replaceRecipes: function replaceRecipes(state, payload) {\n      var recipes = []; // Pick out the props I need\n\n      if (payload && typeof payload === 'object') {\n        recipes = payload.map(function (item) {\n          return {\n            id: item.id,\n            title: item.title,\n            body: item.body,\n            category: item.category,\n            image: item.image,\n            author: item.author,\n            ingredients: item.ingredients,\n            method: item.method\n          };\n        });\n      }\n\n      return _objectSpread({}, state, {\n        recipes: recipes\n      });\n    }\n  },\n\n  /**\n   * Effects/Actions\n   */\n  effects: function effects() {\n    return {\n      /**\n       * Get Meals\n       *\n       * @return {Promise}\n       */\n      getMeals: function getMeals() {\n        var _this = this;\n\n        if (Firebase === null) return function () {\n          return new Promise(function (resolve) {\n            return resolve();\n          });\n        };\n        return new Promise(function (resolve, reject) {\n          return FirebaseRef.child('meals').once('value').then(function (snapshot) {\n            var data = snapshot.val() || [];\n\n            _this.replaceMeals(data);\n\n            return resolve();\n          }).catch(reject);\n        }).catch(function (err) {\n          throw err.message;\n        });\n      },\n\n      /**\n        * Get Recipes\n        *\n       * @return {Promise}\n        */\n      getRecipes: function getRecipes() {\n        var _this2 = this;\n\n        if (Firebase === null) return function () {\n          return new Promise(function (resolve) {\n            return resolve();\n          });\n        };\n        return new Promise(function (resolve) {\n          return FirebaseRef.child('recipes').on('value', function (snapshot) {\n            var data = snapshot.val() || [];\n\n            _this2.replaceRecipes(data);\n\n            return resolve();\n          });\n        }).catch(function (err) {\n          throw err.message;\n        });\n      }\n    };\n  }\n};","map":{"version":3,"sources":["/Users/Crocslut/Desktop/STT/MobileAppSSIPR/src/models/recipes.js"],"names":["Firebase","FirebaseRef","initState","state","recipesx","recipes","meals","reducers","replaceMeals","payload","replaceRecipes","map","item","id","title","body","category","image","author","ingredients","method","effects","getMeals","Promise","resolve","reject","child","once","then","snapshot","data","val","catch","err","message","getRecipes","on"],"mappings":"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","sourcesContent":["import { Firebase, FirebaseRef } from '../lib/firebase';\nimport initState from '../store/recipes';\n\nexport default {\n  /**\n   *  Initial state\n   */\n  state: {\n    recipesx: initState.recipes,\n    meals: initState.meals,\n  },\n\n  /**\n   * Reducers\n   */\n  reducers: {\n    replaceMeals(state, payload) {\n      return {\n        ...state,\n        meals: payload,\n      };\n    },\n    replaceRecipes(state, payload) {\n      let recipes = [];\n      // Pick out the props I need\n      if (payload && typeof payload === 'object') {\n        recipes = payload.map(item => ({\n          id: item.id,\n          title: item.title,\n          body: item.body,\n          category: item.category,\n          image: item.image,\n          author: item.author,\n          ingredients: item.ingredients,\n          method: item.method,\n        }));\n      }\n\n      return { ...state, recipes };\n    },\n  },\n\n  /**\n   * Effects/Actions\n   */\n  effects: () => ({\n    /**\n     * Get Meals\n     *\n     * @return {Promise}\n     */\n    getMeals() {\n      if (Firebase === null) return () => new Promise(resolve => resolve());\n\n      return new Promise((resolve, reject) => FirebaseRef.child('meals').once('value')\n        .then((snapshot) => {\n          const data = snapshot.val() || [];\n          this.replaceMeals(data);\n          return resolve();\n        }).catch(reject)).catch((err) => { throw err.message; });\n    },\n\n    /**\n      * Get Recipes\n      *\n     * @return {Promise}\n      */\n    getRecipes() {\n      if (Firebase === null) return () => new Promise(resolve => resolve());\n\n      return new Promise(resolve => FirebaseRef.child('recipes')\n        .on('value', (snapshot) => {\n          const data = snapshot.val() || [];\n          this.replaceRecipes(data);\n          return resolve();\n        })).catch((err) => { throw err.message; });\n    },\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}