{"ast":null,"code":"/* global */\nimport { init } from '@rematch/core';\nimport createPersistPlugin, { getPersistor } from '@rematch/persist';\nimport createLoadingPlugin from '@rematch/loading';\nimport storage from 'redux-persist/es/storage';\nimport * as models from '../models'; // Create plugins\n\nvar persistPlugin = createPersistPlugin({\n  version: 2,\n  storage: storage,\n  blacklist: []\n});\nvar loadingPlugin = createLoadingPlugin({});\n\nvar configureStore = function configureStore() {\n  var store = init({\n    models: models,\n    redux: {\n      middlewares: []\n    },\n    plugins: [persistPlugin, loadingPlugin]\n  });\n  var persistor = getPersistor();\n  var dispatch = store.dispatch;\n  return {\n    persistor: persistor,\n    store: store,\n    dispatch: dispatch\n  };\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/Crocslut/Desktop/STT/ssipr-proto/src/store/index.js"],"names":["init","createPersistPlugin","getPersistor","createLoadingPlugin","storage","models","persistPlugin","version","blacklist","loadingPlugin","configureStore","store","redux","middlewares","plugins","persistor","dispatch"],"mappings":"AAAA;AACA,SAASA,IAAT,QAAqB,eAArB;AACA,OAAOC,mBAAP,IAA8BC,YAA9B,QAAkD,kBAAlD;AACA,OAAOC,mBAAP,MAAgC,kBAAhC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,WAAxB,C,CAEA;;AACA,IAAMC,aAAa,GAAGL,mBAAmB,CAAC;AACxCM,EAAAA,OAAO,EAAE,CAD+B;AAExCH,EAAAA,OAAO,EAAPA,OAFwC;AAGxCI,EAAAA,SAAS,EAAE;AAH6B,CAAD,CAAzC;AAKA,IAAMC,aAAa,GAAGN,mBAAmB,CAAC,EAAD,CAAzC;;AAEA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,KAAK,GAAGX,IAAI,CAAC;AACjBK,IAAAA,MAAM,EAANA,MADiB;AAEjBO,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE;AADR,KAFU;AAKjBC,IAAAA,OAAO,EAAE,CAACR,aAAD,EAAgBG,aAAhB;AALQ,GAAD,CAAlB;AAQA,MAAMM,SAAS,GAAGb,YAAY,EAA9B;AAT2B,MAUnBc,QAVmB,GAUNL,KAVM,CAUnBK,QAVmB;AAY3B,SAAO;AAAED,IAAAA,SAAS,EAATA,SAAF;AAAaJ,IAAAA,KAAK,EAALA,KAAb;AAAoBK,IAAAA,QAAQ,EAARA;AAApB,GAAP;AACD,CAbD;;AAgBA,eAAeN,cAAf","sourcesContent":["/* global */\nimport { init } from '@rematch/core';\nimport createPersistPlugin, { getPersistor } from '@rematch/persist';\nimport createLoadingPlugin from '@rematch/loading';\nimport storage from 'redux-persist/es/storage';\nimport * as models from '../models';\n\n// Create plugins\nconst persistPlugin = createPersistPlugin({\n  version: 2,\n  storage,\n  blacklist: [],\n});\nconst loadingPlugin = createLoadingPlugin({});\n\nconst configureStore = () => {\n  const store = init({\n    models,\n    redux: {\n      middlewares: [],\n    },\n    plugins: [persistPlugin, loadingPlugin],\n  });\n\n  const persistor = getPersistor();\n  const { dispatch } = store;\n\n  return { persistor, store, dispatch };\n};\n\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}